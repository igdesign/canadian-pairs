.main-site-nav__list,
.footer-nav__list,
body,
fieldset,
.main-site-nav .section-header {
  /*--------------------*\
    Malarky/Rock-Hammer

    zero out margin and padding

    @extend %zero
  \*--------------------*/
  margin: 0;
  padding: 0;
}

.main-site-nav__list,
.footer-nav__list {
  /*--------------------*\
    @extend %list-style-none
  \*--------------------*/
  list-style: none;
}

input[type="checkbox"],
input[type="radio"] {
  /*--------------------*\
    CSS3Please.com + Everyone

    @extend %box-sizing
  \*--------------------*/
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  /* Chrome, IE 8+, Opera, Safari 5.1 */
}

img,
audio {
  width: 100%;
}

p,
table,
textarea,
td,
th {
  -epub-word-break: break-word;
  -ms-word-break: break-word;
  word-break: break-word;
}

/*------------------------------------*\
    $CSSWIZARDRY-GRIDS
\*------------------------------------*/

/**
 * CONTENTS
 * INTRODUCTION.........How the grid system works.
 * VARIABLES............Your settings.
 * MIXINS...............Library mixins.
 * GRID SETUP...........Build the grid structure.
 * WIDTHS...............Build our responsive widths around our breakpoints.
 * PUSH.................Push classes.
 * PULL.................Pull classes.
 */

/*------------------------------------*\
    $INTRODUCTION
\*------------------------------------*/

/**
 * csswizardry grids provides you with widths to suit a number of breakpoints
 * designed around devices of a size you specify. Out of the box, csswizardry
 * grids caters to the following types of device:
 *
 * palm     --  palm-based devices, like phones and small tablets
 * lap      --  lap-based devices, like iPads or laptops
 * portable --  all of the above
 * desk     --  stationary devices, like desktop computers
 * regular  --  any/all types of device
 *
 * These namespaces are then used in the library to give you the ability to
 * manipulate your layouts based around them, for example:
 *
   <div class="grid__item  one-whole  lap--one-half  desk--one-third">
 *
 * This would give you a grid item which is 100% width unless it is on a lap
 * device, at which point it become 50% wide, or it is on a desktop device, at
 * which point it becomes 33.333% width.
 *
 * csswizardry grids also has push and pull classes which allow you to nudge
 * grid items left and right by a defined amount. These follow the same naming
 * convention as above, but are prepended by either `push--` or `pull--`, for
 * example:
 *
   `class="grid__item  one-half  push--one-half"`
 *
 * This would give you a grid item which is 50% width and pushed over to the
 * right by 50%.
 *
 * All classes in csswizardry grids follow this patten, so you should fairly
 * quickly be able to piece together any combinations you can imagine, for
 * example:
 *
   `class="grid__item  one-whole  lap--one-half  desk--one-third  push--desk--one-third"`
 *
   `class="grid__item  one-quarter  palm--one-half  push--palm--one-half"`
 *
   `class="grid__item  palm--one-third  desk--five-twelfths"`
 */

/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/

/**
 * If you are building a non-responsive site but would still like to use
 * csswizardry-grids, set this to 'false':
 */

/* $grid--responsive:            true!default; */

/**
 * Is this build mobile first? Setting to 'true' means that all grids will be
 * 100% width if you do not apply a more specific class to them.
 */

/* $grid--mobile-first:          true!default; */

/**
 * Set the spacing between your grid items.
 */

/* $gutter--horizontal:                24px!default; */

/**
 * Would you like Sass' silent classes, or regular CSS classes?
 */

/* $grid--use-silent-classes:    true!default; */

/**
 * Would you like push and pull classes enabled?
 */

/* $grid--push:                  false!default; */

/* $grid--pull:                  false!default; */

/**
 * Using `inline-block` means that the grid items need their whitespace removing
 * in order for them to work correctly. Set the following to true if you are
 * going to achieve this by manually removing/commenting out any whitespace in
 * your HTML yourself.
 *
 * Setting this to false invokes a hack which cannot always be guaranteed,
 * please see the following for more detail:
 *
 * github.com/csswizardry/csswizardry-grids/commit/744d4b23c9d2b77d605b5991e54a397df72e0688
 * github.com/csswizardry/inuit.css/issues/170#issuecomment-14859371
 */

/* $grid--use-markup-fix:        true!default; */

/**
 * Define your breakpoints. The first value is the prefix that shall be used for
 * your classes (e.g. `.palm--one-half`), the second value is the media query
 * that the breakpoint fires at.
 */

/*
$grid--breakpoints: (
  'bp1' '(max-width: '+$bp1+')',
  'bp2' '(min-width: '+$bp2+')',
  'bp3' '(min-width: '+$bp3+')',
  'bp4' '(min-width: '+$bp4+')',
  'bp5' '(min-width: '+$bp5+')',
  'bp6' '(min-width: '+$bp6+')',
  'bp7' '(min-width: '+$bp7+')'
)!default;
*/

/**
 * Define which namespaced breakpoints you would like to generate for each of
 * widths, push and pull. This is handy if you only need pull on, say, desk, or
 * you only need a new width breakpoint at mobile sizes. It allows you to only
 * compile as much CSS as you need. All are turned on by default, but you can
 * add and remove breakpoints at will.
 *
 * Push and pull shall only be used if `$grid--push` and/or `$grid--pull` and `$grid--responsive`
 * have been set to 'true'.
 */

/* $grid--breakpoint-has-widths: ('bp1', 'bp2', 'bp3', 'bp4', 'bp5', 'bp6', 'bp7')!default; */

/* $grid--breakpoint-has-push:   ('palm', 'lap', 'portable', 'desk')!default; */

/* $grid--breakpoint-has-pull:   ('palm', 'lap', 'portable', 'desk')!default; */

/**
 * You do not need to edit anything from this line onward; csswizardry-grids is
 * good to go. Happy griddin'!
 */

/* $grid--class-type:            unquote("."); */

/*------------------------------------*\
    $MIXINS
\*------------------------------------*/

/**
 * These mixins are for the library to use only, you should not need to modify
 * them at all.
 *
 * Enclose a block of code with a media query as named in `$grid--breakpoints`.
 */

/**
 * Drop relative positioning into silent classes which can't take advantage of
 * the `[class*="push--"]` and `[class*="pull--"]` selectors.
 */

/*------------------------------------*\
    $GRID SETUP
\*------------------------------------*/

/**
 * 1. Allow the grid system to be used on lists.
 * 2. Remove any margins and paddings that might affect the grid system.
 * 3. Apply a negative `margin-left` to negate the columns' gutters.
 */

.main-section,
.colophon {
  list-style: none;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  margin-left: -24px;
  /* [3] */
}

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */

.section-header,
.colophon .contact {
  display: inline-block;
  /* [1] */
  padding-left: 24px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  -webkit-box-sizing: border-box;
  /* [5] */
  -moz-box-sizing: border-box;
  /* [5] */
  box-sizing: border-box;
  /* [5] */
}

/**
 * Reversed grids allow you to structure your source in the opposite order to
 * how your rendered layout will appear. Extends `.grid`.
 */

/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 * Extends `.grid`.
 */

/**
 * Align the entire grid to the right. Extends `.grid`.
 */

/**
 * Centered grids align grid items centrally without needing to use push or pull
 * classes. Extends `.grid`.
 */

/**
 * Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
 * `.grid`.
 */

/**
 * Create grids with narrower gutters. Extends `.grid`.
 */

/**
 * Create grids with wider gutters. Extends `.grid`.
 */

/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/

/**
 * Create our width classes, prefixed by the specified namespace.
 */

/**
 * Our regular, non-responsive width classes.
 */

/**
 * Whole
 */

/**
 * Halves
 */

/**
 * Thirds
 */

/**
 * Quarters
 */

/**
 * Fifths
 */

/**
 * Sixths
 */

/**
 * Eighths
 */

/**
 * Tenths
 */

/**
 * Twelfths
 */

/**
 * Our responsive classes, if we have enabled them.
 */

@media only screen and (max-width: 29.9375em) {
  /**
   * Whole
   */

  .section-header {
    width: 100%;
  }

  /**
   * Halves
   */

  /**
   * Thirds
   */

  /**
   * Quarters
   */

  /**
   * Fifths
   */

  /**
   * Sixths
   */

  /**
   * Eighths
   */

  /**
   * Tenths
   */

  /**
   * Twelfths
   */
}

@media only screen and (min-width: 30em) {
  /**
   * Whole
   */

  /**
   * Halves
   */

  .colophon .contact {
    width: 50%;
  }

  /**
   * Thirds
   */

  /**
   * Quarters
   */

  /**
   * Fifths
   */

  /**
   * Sixths
   */

  /**
   * Eighths
   */

  /**
   * Tenths
   */

  /**
   * Twelfths
   */
}

@media only screen and (min-width: 37.5em) {
  /**
   * Whole
   */

  /**
   * Halves
   */

  /**
   * Thirds
   */

  /**
   * Quarters
   */

  /**
   * Fifths
   */

  /**
   * Sixths
   */

  /**
   * Eighths
   */

  /**
   * Tenths
   */

  /**
   * Twelfths
   */
}

@media only screen and (min-width: 48em) {
  /**
   * Whole
   */

  /**
   * Halves
   */

  /**
   * Thirds
   */

  /**
   * Quarters
   */

  /**
   * Fifths
   */

  /**
   * Sixths
   */

  /**
   * Eighths
   */

  /**
   * Tenths
   */

  /**
   * Twelfths
   */
}

@media only screen and (min-width: 62em) {
  /**
   * Whole
   */

  /**
   * Halves
   */

  /**
   * Thirds
   */

  /**
   * Quarters
   */

  /**
   * Fifths
   */

  /**
   * Sixths
   */

  /**
   * Eighths
   */

  /**
   * Tenths
   */

  /**
   * Twelfths
   */
}

@media only screen and (min-width: 75.4375em) {
  /**
   * Whole
   */

  /**
   * Halves
   */

  /**
   * Thirds
   */

  /**
   * Quarters
   */

  /**
   * Fifths
   */

  /**
   * Sixths
   */

  /**
   * Eighths
   */

  /**
   * Tenths
   */

  /**
   * Twelfths
   */
}

@media only screen and (min-width: 86.375em) {
  /**
   * Whole
   */

  /**
   * Halves
   */

  /**
   * Thirds
   */

  /**
   * Quarters
   */

  /**
   * Fifths
   */

  /**
   * Sixths
   */

  /**
   * Eighths
   */

  /**
   * Tenths
   */

  /**
   * Twelfths
   */
}

/*------------------------------------*\
    $grid--push
\*------------------------------------*/

/**
 * Push classes, to move grid items over to the right by certain amounts.
 */

/*------------------------------------*\
    $grid--pull
\*------------------------------------*/

/**
 * Pull classes, to move grid items back to the left by certain amounts.
 */

/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined in IE 8/9.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */

audio,
canvas,
video {
  display: inline-block;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address styling not present in IE 8/9.
 */

/* ==========================================================================
   Base
   ========================================================================== */

/* ==========================================================================
   Links
   ========================================================================== */

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */

a:focus {
  outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */

/* ==========================================================================
   Typography
   ========================================================================== */

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari 5 and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/**
 * Improve readability of pre-formatted text in all browsers.
 */

pre {
  white-space: pre-wrap;
}

/**
 * Set consistent quote types.
 */

q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */

/**
 * Correct overflow displayed oddly in IE 9.
 */

svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari 5.
 */

figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */

button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

button,
input {
  line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 */

input[type="checkbox"],
input[type="radio"] {
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/* ==========================================================================
   Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* Set <html> and <body> to inherit the height of the viewport */

html,
body {
  min-height: 100%;
}

/**
 * NOTE: Use `text-rendering` with caution - http://cbrac.co/SJt8p1
 * NOTE: Avoid the webkit anti-aliasing trap - http://cbrac.co/TAdhbH
 * 1. Force a vertical scrollbar - http://cbrac.co/163MspB
 * 2. Remove iOS text size adjust without disabling user zoom
 */

html {
  overflow-y: scroll;
  /* 1 */
  font-family: sans-serif;
  /* 1 */
  background-color: #cccccc;
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 10%rem;
  \*--------------------*/
  font-size: 100%;
  line-height: 1.5;
}

/**
 * 1. Inherits percentage declared on above <html> as the root `font-size`
 * 2. Unitless `line-height`, which acts as a multiple of the root `font-size`
 */

body {
  -webkit-tap-highlight-color: #ccf2ee;
  background-color: white;
  text-rendering: optimizeSpeed;
  -webkit-font-smoothing: antialiased;
}

/*
 * Remove text-shadow in selection highlight: h5bp.com/i
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #ccf2ee;
  text-shadow: none;
}

::selection {
  background: #ccf2ee;
  text-shadow: none;
}

/* Change `background` for text selections when browser is unfocused */

::-moz-selection:window-inactive {
  background: #dfdfdf;
}

::selection:window-inactive {
  background: #dfdfdf;
}

/* Remove `background` on images when selected */

img::-moz-selection {
  background: transparent;
}

img::selection {
  background: transparent;
}

/* Define a mobile tap highlight color (iOS 1.1.1+) */

a:link {
  -webkit-tap-highlight-color: #ccf2ee;
}

/*
 * Remove the gap between images and the bottom of their containers: h5bp.com/i/440
 * 1. Remove border when inside `a` element in IE 8/9.
 */

img {
  vertical-align: middle;
  border: 0;
  /* 1 */
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
}

/*
 * Allow only vertical resizing of textareas.
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */

textarea {
  resize: vertical;
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* Fluid-width <audio> elements */

/* Fluid-width media that maintain their aspect ratios */

img,
video {
  max-width: 100%;
  width: auto;
  height: auto !important;
}

abbr,
acronym,
dfn[title] {
  cursor: help;
}

acronym {
  text-transform: uppercase;
}

details {
  cursor: pointer;
}

abbr a {
  text-decoration: none;
}

h1 {
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 0.2emrem;
  \*--------------------*/
  font-size: 2em;
  line-height: 1.6;
}

h2 {
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 0.175emrem;
  \*--------------------*/
  font-size: 1.75em;
  line-height: 1.6;
}

h3 {
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 0.117emrem;
  \*--------------------*/
  font-size: 1.17em;
  line-height: 1.6;
}

h4 {
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 0.1emrem;
  \*--------------------*/
  font-size: 1em;
  line-height: 1.6;
}

h5 {
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 0.083emrem;
  \*--------------------*/
  font-size: 0.83em;
  line-height: 1.6;
}

h6 {
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 0.075emrem;
  \*--------------------*/
  font-size: 0.75em;
  line-height: 1.6;
}

p {
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 0.1emrem;
  \*--------------------*/
  font-size: 1em;
  line-height: 1.5;
}

small {
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 0.0667emrem;
  \*--------------------*/
  font-size: 0.667em;
  line-height: 1.6;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
a {
  font-weight: 200;
  margin: 6px 0;
}

body,
input,
button {
  -webkit-font-smoothing: antialiased;
}

p {
  padding: 0;
  margin-top: 0;
}

/* Nested `list-style` types for ordered lists */

ol {
  list-style: decimal;
}

ol ol {
  list-style: upper-alpha;
}

ol ol ol {
  list-style: lower-roman;
}

ol ol ol ol {
  list-style: lower-alpha;
}

p,
table,
textarea,
td,
th {
  /*--------------------*\
    Malarky/Rock-Hammer
    how to go about splitting words to improve the layout of text when
    line-wrapping
    https://developer.mozilla.org/en-US/docs/Web/CSS/hyphens

    @include css-hyphens( none | manual | auto)
  \*--------------------*/
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
}

strong {
  font-weight: 800;
}

em {
  font-style: italic;
}

blockquote {
  margin: 0 0 1em 12px;
  font-style: italic;
}

blockquote p {
  border-left: 3px solid #cccccc;
  padding-bottom: 0;
}

/**
 * Style
 * Created By: Gregory Daynes
 */

a {
  color: #28978c;
  text-decoration: none;
  border-bottom: 1px dotted #28978c;
}

section {
  margin-top: 24px;
  padding-bottom: 24px;
}

.main-site-nav .section-header {
  /*--------------------*\
    based on Malarky/Rock-Hammer
    hide elements based on requirement

    @include hide(option)
  \*--------------------*/
  visibility: hidden;
  height: 0;
  margin: 0;
  display: block;
}

.main-site-nav__item {
  display: table-cell;
  width: 1%;
}

.main-site-nav__item a {
  text-align: center;
  display: block;
  height: 44px;
  min-height: 44px;
  border-bottom: none;
  width: 100%;
  line-height: 44px;
}

.main-site-nav__item span {
  border-radius: 10px;
  width: 90%;
  display: inline-block;
  height: 22px;
  line-height: 22px;
}

.main-site-nav__item.is-active span,
.main-site-nav__item:hover span,
.main-site-nav__item:focus span,
.main-site-nav__item:active span {
  color: white;
  background-color: #28978c;
  -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.33);
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.33);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.33);
}

.header__logo {
  /*--------------------*\
    based on Malarky/Rock-Hammer
    hide elements based on requirement

    @include hide(option)
  \*--------------------*/
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
  background-image: url(../img/canadian_pairs-logo.png);
  background-repeat: no-repeat;
  background-position: center center;
  -webkit-background-size: auto;
  background-size: auto;
  height: 300px;
  /*--------------------*\
    Malarky/Rock-Hammer

    @include breakpoint(UNIT, QUERY PART LEFT, QUERY PART RIGHT, TARGET)
  \*--------------------*/
}

@media (max-width: 29.9375em) {
  .header__logo {
    -webkit-background-size: contain;
    background-size: contain;
    margin: 0 20px;
  }
}

.main-section {
  margin: 0 24px;
}

.colophon {
  margin-top: 24px;
  background-color: #e6e6e6;
  padding: 0 24px;
}

.footer {
  border-top: 2px solid #e6e6e6;
  background-color: #cccccc;
  padding-top: 24px;
  text-align: center;
}

.footer-nav__item {
  display: inline;
  /*--------------------*\
    rem for browsers with support
    px for ones without

    @include font-size(integer)
    // font-size: 0.0667emrem;
  \*--------------------*/
  font-size: 0.667em;
  line-height: 1;
}

/* END STYLE ***************/

@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    -webkit-box-shadow: none !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links for images, or javascript/internal links
   */

  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: "";
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  thead {
    display: table-header-group;
    /* h5bp.com/t */
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

@page {
    margin: 0.5cm;
}

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

/*--------------------*\
  add box to screen displaying current breakpoint
\*--------------------*/

body:after {
  content: 'no-bp';
  display: block;
  position: fixed;
  bottom: 0;
  right: 0;
  opacity: 0.3;
  /*--------------------*\
    Malarky/Rock-Hammer

    @include breakpoint(UNIT, QUERY PART LEFT, QUERY PART RIGHT, TARGET)
  \*--------------------*/
  /*--------------------*\
    Malarky/Rock-Hammer

    @include breakpoint(UNIT, QUERY PART LEFT, QUERY PART RIGHT, TARGET)
  \*--------------------*/
  /*--------------------*\
    Malarky/Rock-Hammer

    @include breakpoint(UNIT, QUERY PART LEFT, QUERY PART RIGHT, TARGET)
  \*--------------------*/
  /*--------------------*\
    Malarky/Rock-Hammer

    @include breakpoint(UNIT, QUERY PART LEFT, QUERY PART RIGHT, TARGET)
  \*--------------------*/
  /*--------------------*\
    Malarky/Rock-Hammer

    @include breakpoint(UNIT, QUERY PART LEFT, QUERY PART RIGHT, TARGET)
  \*--------------------*/
  /*--------------------*\
    Malarky/Rock-Hammer

    @include breakpoint(UNIT, QUERY PART LEFT, QUERY PART RIGHT, TARGET)
  \*--------------------*/
}

@media (max-width: 29.9375em) {
  body:after {
    content: 'bp1';
  }
}

@media (min-width: 30em) {
  body:after {
    content: 'bp2';
  }
}

@media (min-width: 37.5em) {
  body:after {
    content: 'bp3';
  }
}

@media (min-width: 48em) {
  body:after {
    content: 'bp4';
  }
}

@media (min-width: 62em) {
  body:after {
    content: 'bp5';
  }
}

@media (min-width: 75.4375em) {
  body:after {
    content: 'bp6';
  }
}

/*# sourceMappingURL=style.css.map */